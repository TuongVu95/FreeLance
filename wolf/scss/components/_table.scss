$table-szie: (
  lg: (
    padding-x: $table-cell-padding-x-lg,
    padding-y: $table-cell-padding-y-lg,
  ),
  md: (
    padding-x: $table-cell-padding-x-md,
    padding-y: $table-cell-padding-y-md,
  ),
  sm: (
    padding-x: $table-cell-padding-x-sm,
    padding-y: $table-cell-padding-y-sm,
  ),
);

%font-lg {
  @extend .fs-p-16;
}
%font-md {
  @extend .fs-p-14;
}

.table {
  width: 100%;
  &-radius {
    overflow: hidden;
    @extend .radius-8;
  }
  &-border {
    box-shadow: inset 0 0 0px 1px $gray-200;
    tr {
      &:not(:last-child) {
        td,
        th {
          border-bottom: 1px solid $gray-200;
        }
      }
    }
  }
  .cell-light {
    @extend .bg-gray-100;
  }
  &-border-cell {
    tr {
      @extend %shadow-b-1;
    }
  }
  &-striped {
    tbody tr:nth-child(even) {
      @extend .bg-gray-100;
    }
  }
  thead {
    @extend .f-w-500, .txt-gray-900;
  }
  tbody {
    @extend .txt-gray-700;
  }
  &-lg {
    thead,
    tbody {
      @extend %font-lg;
    }
  }
  &-md,
  &-sm {
    thead,
    tbody {
      @extend %font-md, .txt-left;
    }
  }
  @each $key, $value in $table-szie {
    $x: map-get($value, "padding-x");
    $y: map-get($value, "padding-y");
    &-#{$key} {
      td,
      th {
        padding: $y $x;
      }
    }
  }
}
